<%# locals: (form:) -%>

<%=
  application_form_with(model: form,
                      url: organization_memberships_url(current_organization),
) do |f| %>
  <%= f.input_wrapper do %>
    <%= f.label :email do %>
      <%= email_address_icon %> Email
    <% end %>

    <%= f.email_field(:email, placeholder: t("practical_framework.forms.placeholders.email"),
                                autocomplete: "email",
                                required: true,
                                data: {"focusout-validation": true}
                      )
      %>

      <%= f.field_errors :email %>
  <% end %>

  <%= f.fieldset("aria-required": true, id: f.field_id(:membership_type)) do %>
    <%= f.legend do %>
      <%= badge_icon %> Role
      <%= f.field_errors :membership_type, class: 'visually-hidden', id: f.field_id(:membership_type, :errors_aria) %>
    <% end %>

    <%= f.required_radio_collection_wrapper(:membership_type, "validation-message": form.errors.generate_message(:membership_type, :blank), class: "stack-compact") do %>
      <%= f.radio_collection(field_method: :membership_type, options: membership_type_options) %>
    <% end %>

    <%= f.field_errors :membership_type, "aria-hidden": true, id: f.field_id(:membership_type, :errors) %>
  <% end %>

  <%= f.fallback_error_section(options: {id: dom_id(form, :generic_errors)}) %>

  <section>
    <%= render PracticalFramework::Components::StandardButton.new(title: t("organization_memberships.invitation_form.submit_button_title"), leading_icon: send_email_icon, type: :submit, html_options: {data: {disable: true}}) %>
  </section>
<% end %>